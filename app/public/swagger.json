{
  "consumes": [
    "application/json",
    "multipart/form-data"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Documentation of PetStore API.",
    "title": "PetStore.",
    "version": "1.0.0"
  },
  "basePath": "/",
  "paths": {
    "/pet": {
      "put": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "pet"
        ],
        "summary": "Обновление существующего питомца.",
        "operationId": "PetUpdateRequest",
        "parameters": [
          {
            "x-go-name": "Body",
            "description": "Питомец которого надо обновить",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Pet"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/PetUpdateResponse"
          }
        }
      },
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "pet"
        ],
        "summary": "Добавление нового питомца в магазин.",
        "operationId": "PetAddRequest",
        "parameters": [
          {
            "x-go-name": "Body",
            "description": "Питомец которого надо добавить в магазин",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Pet"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/PetAddResponse"
          }
        }
      }
    },
    "/pet/findByStatus": {
      "get": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "description": "Несколько значений статуса могут быть представлены строками, разделенными запятыми",
        "tags": [
          "pet"
        ],
        "summary": "Найти питомца по статусу.",
        "operationId": "GetByStatusRequest",
        "parameters": [
          {
            "type": "array",
            "items": {
              "enum": [
                "available",
                " pending",
                " sold"
              ],
              "type": "string"
            },
            "x-go-name": "Status",
            "description": "Значения статуса, которые необходимо учитывать при фильтрации\nДоступные значения : available, pending, sold",
            "name": "status",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetByStatusResponse"
          }
        }
      }
    },
    "/pet/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Авторизация пользователя для работы с питомцами.",
        "operationId": "LoginRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/LoginResponse"
          }
        }
      }
    },
    "/pet/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Регистрация пользователя для работы с питомцами.",
        "operationId": "RegisterRequest",
        "parameters": [
          {
            "name": "Body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RegisterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/RegisterReponse"
          }
        }
      }
    },
    "/pet/{petId}": {
      "get": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "description": "Возвращает одного питомца",
        "tags": [
          "pet"
        ],
        "summary": "Найти питомца по ID.",
        "operationId": "GetByIDRequest",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "x-go-name": "PetID",
            "description": "ID питомца",
            "name": "petId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetByIDResponse"
          }
        }
      },
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "pet"
        ],
        "summary": "Обновить питомца в магазине по ID.",
        "operationId": "UpdateByIDRequest",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "x-go-name": "PetID",
            "description": "ID питомца которого нужно обновить",
            "name": "petId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "Name",
            "description": "Новое имя питомца",
            "name": "name",
            "in": "formData"
          },
          {
            "type": "string",
            "x-go-name": "Status",
            "description": "Новый статус питомца",
            "name": "status",
            "in": "formData"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/UpdateByIDResponse"
          }
        }
      },
      "delete": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "pet"
        ],
        "summary": "Удалить питомца.",
        "operationId": "DeletePetRequest",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "APIKey",
            "name": "api_key",
            "in": "header"
          },
          {
            "type": "integer",
            "format": "int64",
            "x-go-name": "PetID",
            "description": "ID питомца",
            "name": "petId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "404": {
            "description": " Pet not found."
          }
        }
      }
    },
    "/pet/{petId}/uploadImage": {
      "post": {
        "security": [
          {
            "Bearer": [
              "[]"
            ]
          }
        ],
        "tags": [
          "pet"
        ],
        "summary": "загрузка изображения.",
        "operationId": "UploadImageParametes",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "x-go-name": "PetID",
            "description": "ID питомца",
            "name": "petId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-go-name": "AdditionalMetadata",
            "description": "Дополнительная информация для передачи на сервер",
            "name": "additional_metadata",
            "in": "formData"
          },
          {
            "type": "file",
            "x-go-name": "File",
            "description": "файл для загрузки",
            "name": "file",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ApiResponse"
          }
        }
      }
    },
    "/store/inventory": {
      "get": {
        "description": "Возвращает сопоставление статусов с их колличеством",
        "tags": [
          "store"
        ],
        "summary": "Получить список заказов по статусу.",
        "operationId": "GetInventoryRequest",
        "responses": {
          "200": {
            "$ref": "#/responses/GetInventoryResponse"
          }
        }
      }
    },
    "/store/order": {
      "post": {
        "tags": [
          "store"
        ],
        "summary": "Разместить заказ питомца.",
        "operationId": "CreateOrderRequest",
        "parameters": [
          {
            "x-go-name": "Body",
            "description": "Разместить заказ на покупку питомца",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Order"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/CreateOrderResponse"
          },
          "400": {
            "description": " Invalid Order."
          }
        }
      }
    },
    "/store/order/{orderId}": {
      "get": {
        "tags": [
          "store"
        ],
        "summary": "Найти заказ на покупку питомца по ID.",
        "operationId": "GetOrderByIDRequest",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "x-go-name": "OrderID",
            "description": "ID заказа",
            "name": "orderId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetOrderByIDResponse"
          },
          "400": {
            "description": " Invalid ID supplied."
          },
          "404": {
            "description": " Order not found."
          }
        }
      },
      "delete": {
        "description": "Используйте только положительные целые числа",
        "tags": [
          "store"
        ],
        "summary": "Удаление заказа по ID.",
        "operationId": "DeleteOrderRequest",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "x-go-name": "OrderID",
            "description": "ID заказа который нужно удалить",
            "name": "orderId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/DeleteOrderResponse"
          },
          "400": {
            "description": " Invalid ID supplied."
          },
          "404": {
            "description": " Order not found."
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Создание пользователя.",
        "operationId": "CreateUserRequest",
        "parameters": [
          {
            "x-go-name": "Body",
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/CreateUserResponse"
          }
        }
      }
    },
    "/user/createWithArray": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Создаёт список пользователей по полученному массиву.",
        "operationId": "CreateArrayRequest",
        "parameters": [
          {
            "x-go-name": "Body",
            "description": "Список объектов user",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/CreateArrayResponse"
          }
        }
      }
    },
    "/user/createWithList": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Создаёт список пользователей по полученному массиву.",
        "operationId": "CreateListRequest",
        "parameters": [
          {
            "x-go-name": "Body",
            "description": "Список объектов user",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/CreateListResponse"
          }
        }
      }
    },
    "/user/{username}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Получения пользователя по никнейму.",
        "operationId": "GetUserRequest",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Username",
            "description": "Никнейм пользователя",
            "name": "username",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetUserResponse"
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Обновляет пользователя.",
        "operationId": "UpdateUserRequest",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Username",
            "description": "Никнейм пользователя которого надо обновить",
            "name": "username",
            "in": "path",
            "required": true
          },
          {
            "x-go-name": "Body",
            "description": "Новый объект user",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/UpdateUserResponse"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Удаление пользователя.",
        "operationId": "DeleteUserRequest",
        "parameters": [
          {
            "type": "string",
            "x-go-name": "Username",
            "description": "Никнейм пользователя",
            "name": "username",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/DeleteUserResponse"
          }
        }
      }
    }
  },
  "definitions": {
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Code"
        },
        "message": {
          "type": "string",
          "x-go-name": "Message"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        }
      },
      "x-go-package": "projects/LDmitryLD/petstore/app/internal/models"
    },
    "Category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "ID"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        }
      },
      "x-go-package": "projects/LDmitryLD/petstore/app/internal/models"
    },
    "LoginRequest": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "x-go-name": "Password"
        },
        "username": {
          "type": "string",
          "x-go-name": "Username"
        }
      },
      "x-go-package": "projects/LDmitryLD/petstore/app/internal/modules/auth/controller"
    },
    "LoginResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "x-go-name": "Message"
        },
        "success": {
          "type": "boolean",
          "x-go-name": "Success"
        }
      },
      "x-go-package": "projects/LDmitryLD/petstore/app/internal/modules/auth/controller"
    },
    "Order": {
      "type": "object",
      "properties": {
        "complete": {
          "type": "boolean",
          "x-go-name": "Complete"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "ID"
        },
        "petId": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "PetID"
        },
        "quantity": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Quantity"
        },
        "shipDate": {
          "type": "string",
          "x-go-name": "ShipDate"
        },
        "status": {
          "type": "string",
          "x-go-name": "Status"
        }
      },
      "x-go-package": "projects/LDmitryLD/petstore/app/internal/models"
    },
    "Pet": {
      "type": "object",
      "properties": {
        "category": {
          "$ref": "#/definitions/Category"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "ID"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "photoUrls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "PhotoUrls"
        },
        "status": {
          "type": "string",
          "x-go-name": "Status"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Category"
          },
          "x-go-name": "Tags"
        }
      },
      "x-go-package": "projects/LDmitryLD/petstore/app/internal/models"
    },
    "RegisterReponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "x-go-name": "Message"
        },
        "success": {
          "type": "boolean",
          "x-go-name": "Success"
        }
      },
      "x-go-package": "projects/LDmitryLD/petstore/app/internal/modules/auth/controller"
    },
    "RegisterRequest": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "x-go-name": "Password"
        },
        "username": {
          "type": "string",
          "x-go-name": "Username"
        }
      },
      "x-go-package": "projects/LDmitryLD/petstore/app/internal/modules/auth/controller"
    },
    "User": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "x-go-name": "Email"
        },
        "firstName": {
          "type": "string",
          "x-go-name": "FirstName"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "ID"
        },
        "lastName": {
          "type": "string",
          "x-go-name": "LastName"
        },
        "password": {
          "type": "string",
          "x-go-name": "Password"
        },
        "phone": {
          "type": "string",
          "x-go-name": "Phone"
        },
        "userStatus": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "UserStatus"
        },
        "username": {
          "type": "string",
          "x-go-name": "Username"
        }
      },
      "x-go-package": "projects/LDmitryLD/petstore/app/internal/models"
    }
  },
  "responses": {
    "ApiResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ApiResponse"
      }
    },
    "CreateArrayResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ApiResponse"
      }
    },
    "CreateListResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ApiResponse"
      }
    },
    "CreateOrderResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Order"
      }
    },
    "CreateUserResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ApiResponse"
      }
    },
    "DeleteOrderResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ApiResponse"
      }
    },
    "DeleteUserResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ApiResponse"
      }
    },
    "GetByIDResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Pet"
      }
    },
    "GetByStatusResponse": {
      "description": "",
      "schema": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/Pet"
        }
      }
    },
    "GetInventoryResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "additionalProperties": {}
      }
    },
    "GetOrderByIDResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Order"
      }
    },
    "GetUserResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/User"
      }
    },
    "LoginResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/LoginResponse"
      }
    },
    "PetAddResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Pet"
      }
    },
    "PetUpdateResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/Pet"
      }
    },
    "RegisterReponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/RegisterReponse"
      }
    },
    "UpdateByIDResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ApiResponse"
      }
    },
    "UpdateUserResponse": {
      "description": "",
      "schema": {
        "$ref": "#/definitions/ApiResponse"
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}